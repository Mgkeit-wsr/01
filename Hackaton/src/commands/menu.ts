import ICommand from "../interfaces/command";
import { Markup } from "telegraf";
import { Heads, Workers } from "../database";

const cmd: ICommand = {
  name: "menu",
  description: "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
  callback: async (ctx) => {
    const worker = await Workers.get(`${ctx.message!.from.id}`);
    const head = await Heads.get(`${ctx.message!.from.id}`);
    if (worker) {
      const markup = Markup.keyboard([
        ["üîé –í–∞–∫–∞–Ω—Å–∏–∏", "üî≠ –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞"],
        ["‚úèÔ∏è –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ", "–ü–∞—Ä—Ç–Ω–µ—Ä—ã"],
      ]).resize();
      return await ctx.reply("–í–æ–∑–≤—Ä–∞—â–∞—é –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ä–∞–±–æ—Ç–Ω–∏–∫–∞", markup);
    } else if (head) {
      const markup = Markup.keyboard([["üìë –í–∞—à–∏ –≤–∞–∫–∞–Ω—Å–∏–∏", "üî≠ –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞"], ["‚úèÔ∏è –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ"]]).resize();
      return await ctx.reply("–í–æ–∑–≤—Ä–∞—â–∞—é –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è", markup);
    } else {
      await ctx.reply("–í—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã");
      return ctx.scene.enter("register-scene");
    }
  },
};
export default cmd;
