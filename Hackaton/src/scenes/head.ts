import { Markup, Scenes } from "telegraf";
import { Heads, Workers } from "../database";

const scene = new Scenes.WizardScene(
  "head-scene",
  async (ctx) => {
    await ctx.reply("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:");
    return ctx.wizard.next();
  },
  async (ctx) => {
    //@ts-ignore
    await Heads.set(`${ctx.message.from.id}.firstname`, ctx.message.text);
    await ctx.reply("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é:");
    return ctx.wizard.next();
  },

  async (ctx) => {
    //@ts-ignore
    await Heads.set(`${ctx.message.from.id}.lastname`, ctx.message.text);
    await ctx.reply("–í–≤–µ–¥–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–µ–±—è:");
    return ctx.wizard.next();
  },
  async (ctx) => {
    //@ts-ignore
    await Heads.set(`${ctx.message.from.id}.description`, ctx.message.text);

    const user = await Heads.get(String(ctx.message!.from.id));
    const markup = Markup.keyboard(["–î–∞", "–ù–µ—Ç"]).oneTime().resize();
    await ctx.reply(
      `–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è?\n–ò–º—è: ${user.firstname}\n–§–∞–º–∏–ª–∏—è: ${user.lastname}\n–û–ø–∏—Å–∞–Ω–∏–µ: ${user.description}`,
      markup
    );
    return ctx.wizard.next();
  },
  async (ctx) => {
    //@ts-ignore
    if (ctx.message.text === "–ù–µ—Ç") {
      await ctx.scene.leave();
      return await ctx.scene.enter("worker-scene");
    }
    const markup = Markup.keyboard([
      ["üìë –í–∞—à–∏ –≤–∞–∫–∞–Ω—Å–∏–∏", "üî≠ –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞"],
      ["‚úèÔ∏è –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ"],
    ]).resize();
    await ctx.reply("–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –∫–∞–∫ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å", markup);
    return ctx.scene.leave();
  }
);

export default scene;
