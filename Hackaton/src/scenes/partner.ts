import { Markup, Scenes } from 'telegraf';
import { Heads, Workers } from '../database';

const scene = new Scenes.WizardScene(
  'partners-scene',
  async (ctx) => {
    //@ts-ignore
    await Heads.set(`${ctx.message.from.id}.description`, ctx.message.text);
    //@ts-ignore
    const markup = Markup.keyboard(['HeadHunter', '–ù–∞–∑–∞–¥']).oneTime().resize();
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞: ', markup);
    return ctx.wizard.next();
  },
  async (ctx) => {
    //@ts-ignore
    if (ctx.message.text === '–ù–∞–∑–∞–¥') {
      await ctx.scene.leave();
      const markup = Markup.keyboard([
        ['üîé –í–∞–∫–∞–Ω—Å–∏–∏', 'üî≠ –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞'],
        ['‚úèÔ∏è –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ', '–ü–∞—Ä—Ç–Ω–µ—Ä—ã'],
      ]).resize();

      return await ctx.reply('–í–æ–∑–≤—Ä–∞—â–∞—é –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', markup);
    }

    await ctx.scene.leave();
    await ctx.reply('–ü–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π –ø–∞—Ä—Ç–Ω–µ—Ä–∞');
    return await ctx.scene.enter('hh-scene');
  }
);

export default scene;
